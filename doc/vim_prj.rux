*vim_prj.txt*		Для Vim версии 7.0.		*vim_prj*

			РУКОВОДСТВО ПО VIM_PRJ

1. Описание						|vim_prj-description|
2. Зависимости						|vim_prj-requirements|
3. Установка						|vim_prj-install|
4. Использование					|vim_prj-use|
5. Команды						|vim_prj-commands|
6. События						|vim_prj-events|

================================================================================
1. Описание						*vim_prj-description*

Плагин vim_prj служит для создания локального проекта. Он добавляет в качестве 
первого пути поиска Vim-скриптов (опция 'runtimepath') локальный каталог 
проекта '.vimprj', что создает следующую последовательность 
поиска Vim-скриптов и плагинов для загрузки:

  1. В локальном каталоге проекта
  2. В каталоге пользователя ('.vim' или 'vimfiles')
  3. В корневом каталоге редактора ($VIMRUNTIME)

Такая последовательность позволяет определить для конкретного проекта свои
настройки редактора и плагинов, а так же использовать некоторый плагин только
в рамках конкретного проекта.

Некоторые плагины, не совместимые с данным, могут нарушать такую 
последовательность загрузки. Совместимыми считаются все зависимые от данного
плагина плагины.

================================================================================
2. Зависимости						*vim_prj-requirements*

Данный плагин работает с редактором Vim версии 7.0 или старше.

vim_lib		https://github.com/Bashka/vim_lib
	Плагин реализован с использованием класса vim_lib#sys#Plugin#, а так
	же использует некоторые компоненты этой библиотеки.

================================================================================
3. Установка						*vim_prj-install*

Плагин устанавливается аналогично другим плагинам редактора Vim, но требует
добавления следующих команд в файл .vimrc:
>
	filetype off
	let &g:rtp = '.vimprj,' . &g:rtp
	filetype plugin indent on

Если используется менеджер плагинов Vundle, можно расположить вторую команду
среди объявлений используемых плагинов, опустив первую и третью команду (они
обязательны в Vundle):
>
	Plugin 'Bashka/vim_prj'
	let &g:rtp = '.vimprj,' . &g:rtp

================================================================================
4. Использование					*vim_prj-use*

Если в текущем проекте создан каталог проекта, то скрипты в этом каталоге 
будут загружаться в первую очередь. Эта логика позволяет определить настройки 
редактора и плагинов для конкретного проекта.

Данный плагин так же определяет расположение основных каталогов, используемых 
редактором:

  - vim_prj#.global - адрес глобального хранилища
  - vim_prj#.user - адрес локального хранилища пользователя
  - vim_prj#.prj - адрес каталога проекта

================================================================================
5. Команды						*vim_prj-commands*

VimPrjCreate						*vim_prj-comm-create*
	Данная команда инициирует проект, создавая в текущем каталоге каталог 
	проекта.

================================================================================
6. События						*vim_prj-events*

VimPrjCreate						*vim_prj-event-create*
	Данное событие выбрасывается после инициализации проекта с
	использованием команды 'VimPrjCreate'. Событие не выбрасывается,
	если проект уже был инициализирован (каталог проекта существовал).
	Объект события имеет следующие свойства:
	  - dirprj - объект класса vim_lib#base#File#, представляющий каталог
	    проекта.

================================================================================
vim:tw=78:ts=8:ft=help:norl:colorcolumn=+3:
